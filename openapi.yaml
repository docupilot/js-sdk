openapi: 3.0.3
info:
  title: Docupilot V2 APIs
  version: '2.0'
  description: Docupilot V2 APIs
  termsOfService: https://docupilot.app/terms-and-conditions/
  contact:
    name: Team Docupilot
    email: support@docupilot.app
paths:
  /accounts/v2/auth_tokens/:
    get:
      operationId: list_auth_tokens
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth_tokens
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthToken'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_auth_token
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - auth_tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/auth_tokens/{id}/:
    put:
      operationId: update_auth_token
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auth token.
        required: true
      tags:
      - auth_tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: delete_auth_token
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auth token.
        required: true
      tags:
      - auth_tokens
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/invitations/:
    get:
      operationId: list_invitation
      summary: Get list of Invitation
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: is_accepted
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - invitations
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invitation'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_invitation
      summary: Create Invitation
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/invitations/{invite_key}/get_by_key/:
    get:
      operationId: retrieve_invitation_by_key
      summary: Get Invitation
      parameters:
      - in: path
        name: invite_key
        schema:
          type: string
        required: true
      tags:
      - invitations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/invitations/{id}/:
    delete:
      operationId: delete_invitation
      summary: Delete Invitation
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitations
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/invitations/{id}/accept_invitation/:
    get:
      operationId: retrieve_invitation_for_accept
      summary: retrieve invitation for accept
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitations
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    post:
      operationId: accept_invitation
      summary: Accept invitation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitations
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInvite'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/invitations/{id}/resend_invitation/:
    post:
      operationId: resend_invitation
      summary: Resend invitation
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitations
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/subscription/details/:
    get:
      operationId: get_subscription_details
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - subscription
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebeeSubscription'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/subscription/extend_trial/:
    post:
      operationId: extend_trial
      summary: Extend trial
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - subscription
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/subscription/hosted_page/:
    get:
      operationId: get_chargebee_hosted_page
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: plan_id
        schema:
          type: string
      tags:
      - subscription
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/subscription/portal_session/:
    get:
      operationId: get_chargebee_portal_session
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - subscription
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebeeSubscription'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/subscription/renew_request/:
    post:
      operationId: subscription_renew_request_create
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RenewSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RenewSubscription'
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/subscription/unpaid_invoices/:
    get:
      operationId: get_chargebee_unpaid_invoices
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - subscription
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/team/:
    get:
      operationId: list_all_team_members
      summary: List all team members
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - team
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/team/{id}/:
    delete:
      operationId: delete_team_member
      summary: delete team member
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: transfer_to
        schema:
          type: string
      tags:
      - team
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/team/{id}/change_role/:
    put:
      operationId: change_role_of_team_member
      summary: Change role of team member.
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeRole'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/team/transfer_ownership/:
    put:
      operationId: transfer_ownership_to_admin_user
      summary: Transfer Ownership To Admin User
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOwnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransferOwnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransferOwnership'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/template_gallery/:
    get:
      operationId: list_gallery_templates
      summary: Get list of galery templates
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Gallery templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGallery'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/template_gallery/{id}/:
    get:
      operationId: get_gallery_template
      summary: Get one template
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this template gallery.
        required: true
      tags:
      - Gallery templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGallery'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /accounts/v2/user_satisfaction_survey/g2_review/:
    get:
      operationId: g2_review
      summary: Redirect to G2 Review Page
      tags:
      - user_satisfaction_survey
      security:
      - SessionAuthentication: []
      responses:
        '302':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/user_satisfaction_survey/nps_next_reminder/:
    post:
      operationId: nps_next_reminder
      summary: Update the next NPS reminder time
      tags:
      - user_satisfaction_survey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpsNextReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NpsNextReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NpsNextReminder'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/user_satisfaction_survey/nps_rating/:
    post:
      operationId: nps_rating
      summary: Update NPS rating
      tags:
      - user_satisfaction_survey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpsRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NpsRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NpsRating'
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/user_satisfaction_survey/save_user_feedback/:
    post:
      operationId: save_customer_feedback
      summary: Save customer feedback
      tags:
      - user_satisfaction_survey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCustomerFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaveCustomerFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaveCustomerFeedback'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/user_satisfaction_survey/show_survey_prompt/:
    get:
      operationId: show_survey_prompt
      summary: Show survey prompt
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - user_satisfaction_survey
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyPrompt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/user_satisfaction_survey/update_g2_review_updated_on/:
    post:
      operationId: update_g2_review_updated_on
      summary: Update g2_review_updated_on
      tags:
      - user_satisfaction_survey
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/users/initiate_authorization_sequence/:
    post:
      operationId: initiate_authorization_sequence
      summary: Initiate a re-authorization sequence that would verify authenticity
        of logged-in userin order to allow performing high security operations like
        delete workspace
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateAuthorizationSequence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InitiateAuthorizationSequence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InitiateAuthorizationSequence'
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
  /accounts/v2/users/me/:
    get:
      operationId: get_me
      summary: get logged in user details
      tags:
      - users
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
  /accounts/v2/users/update_user_profile/:
    patch:
      operationId: update_user_profile
      summary: Update User Profile
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
      security:
      - SessionAuthentication: []
      responses:
        '202':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/workspaces/:
    get:
      operationId: list_workspaces
      summary: Get list of Workspaces
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - workspaces
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_workspace
      summary: Create Workspace
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/workspaces/csm_details/:
    get:
      operationId: get_csm_details
      description: Returns csm details for given workspace
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - workspaces
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSMDetails'
              examples:
                ResponseExample:
                  value:
                  - name: test1
                    phone_number: '12345678'
                  - name: test2
                    phone_number: '87654321'
                  summary: Response Example
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/workspaces/current/:
    get:
      operationId: get_current_workspace
      summary: get current workspace details
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - workspaces
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    patch:
      operationId: update_current_workspace
      summary: update current workspace details
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchedWorkspace'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/workspaces/current/delete/:
    post:
      operationId: delete_current_workspace
      summary: Delete a workspace and other related data permanently
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCurrentWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeleteCurrentWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeleteCurrentWorkspace'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /accounts/v2/workspaces/retention_preference/:
    get:
      operationId: get_workspace_data_retention_preference
      summary: get workspace data retention preference
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - workspaces
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPreference'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    put:
      operationId: update_workspace_data_retention_preference
      summary: update workspace data retention preference
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionPreference'
            examples:
              Example1:
                value:
                  merge_data: P1D
                  generated_document: P1D
                summary: Retention Example 1 Day
              Example2:
                value:
                  merge_data: P1M0DT0H
                  generated_document: P1M0DT0H
                summary: Retention Example 1 Month
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RetentionPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RetentionPreference'
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPreference'
              examples:
                Example1:
                  value:
                    merge_data: P1D
                    generated_document: P1D
                  summary: Retention Example 1 Day
                Example2:
                  value:
                    merge_data: P1M0DT0H
                    generated_document: P1M0DT0H
                  summary: Retention Example 1 Month
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /ai-chat/threads/:
    get:
      operationId: list_all_chat_threads
      summary: List all chat threads
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ai-chat
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatThreads'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_new_customer_thread
      summary: create new customer thread
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - ai-chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerThreadInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCustomerThreadInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCustomerThreadInput'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerThreadOutput'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /ai-chat/threads/{thread_id}/:
    get:
      operationId: ai_chat_threads_retrieve
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        required: true
      tags:
      - ai-chat
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatThreads'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    put:
      operationId: update_customer_thread
      summary: update existing customer thread
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        required: true
      tags:
      - ai-chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerThreadInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateCustomerThreadInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCustomerThreadInput'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerThreadOutput'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: ai_chat_threads_destroy
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        required: true
      tags:
      - ai-chat
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /ai-chat/threads/{thread_id}/messages/:
    get:
      operationId: get_messages_for_thread
      summary: Get all messages for a thread
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        required: true
      tags:
      - ai-chat
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessages'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /ai-chat/threads/{thread_id}/update_thread_name/:
    put:
      operationId: update_customer_thread_name
      summary: update customer thread name
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        required: true
      tags:
      - ai-chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadName'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateThreadName'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateThreadName'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /ai/online-builder/create_template/:
    post:
      operationId: create_template_online_builder_ai
      summary: create template using ai
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AITemplateCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AITemplateCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AITemplateCreate'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /ai/online-builder/edit_template/:
    post:
      operationId: edit_template_online_builder_ai
      summary: edit template using chat completion
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AITemplateEdit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AITemplateEdit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AITemplateEdit'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AITemplateEdit'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /ai/online-builder/list_prompt_suggestions/:
    post:
      operationId: prompt_suggestions_online_builder_ai
      summary: list prompt suggestions based on template name and description
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptSuggestions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PromptSuggestions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PromptSuggestions'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptSuggestions'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/append/:
    post:
      operationId: append_files
      parameters:
      - in: header
        name: X-Client
        schema:
          type: string
        description: Client Origin
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - append
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppendFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppendFiles'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_url:
                    type: string
                  file_name:
                    type: string
            application/pdf:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
            application/pdf:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/domain/{id}/:
    get:
      operationId: get_domain
      summary: Get one domain
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain.
        required: true
      tags:
      - domain
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/domain/{id}/verify/:
    patch:
      operationId: verify_domain
      summary: verify domain
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain.
        required: true
      tags:
      - domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDomain'
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerify'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/folders/:
    get:
      operationId: list_folders
      summary: Get list of folders
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: permission
        schema:
          type: string
          enum:
          - manage
          - read
          - write
      tags:
      - folders
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_folder
      summary: Create a folder
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Folder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/folders/{folder_id}/permissions/:
    get:
      operationId: list_folder_sharing
      summary: Get all shared permissions for specific folder
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: folder_id
        schema:
          type: integer
        required: true
      tags:
      - folders
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FolderSharing'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_folder_sharing_permission
      summary: Create folder sharing permission
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: folder_id
        schema:
          type: integer
        required: true
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FolderSharing'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FolderSharing'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FolderSharing'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FolderSharing'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/folders/{folder_id}/permissions/{id}/:
    get:
      operationId: get_folder_sharing
      summary: Get specific permission details for given folder
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: folder_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this folder sharing setting.
        required: true
      tags:
      - folders
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSharing'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    patch:
      operationId: update_folder_sharing_permission_content
      summary: Update folder content partially
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: folder_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this folder sharing setting.
        required: true
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateFolderSharing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateFolderSharing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateFolderSharing'
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSharing'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: revoke_folder_sharing_permission
      summary: Revoke folder sharing permission
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: folder_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this folder sharing setting.
        required: true
      tags:
      - folders
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/folders/{id}/:
    put:
      operationId: update_folder
      summary: Updates a folder
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this folder.
        required: true
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Folder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: delete_folder
      description: This operation moves all templates under this folder to home directory.
      summary: Delete a folder.
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this folder.
        required: true
      tags:
      - folders
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/folders/count/:
    get:
      operationId: get_user_created_folder_count
      summary: Get the count of folders created by the user.
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: owner_id
        schema:
          type: string
        description: Owner Id of resource
        required: true
      tags:
      - folders
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCount'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/folders/sharing_status/:
    get:
      operationId: folders_sharing_status_retrieve
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - folders
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingInfoFolder'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/history/:
    get:
      operationId: get_created_documents_history
      summary: Get created documents history
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: end_date
        schema:
          type: string
          format: date-time
        description: 'DateTime in this format: 2019-05-02 16:25:12.353000'
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date-time
        description: 'DateTime in this format: 2019-05-02 16:25:12.353000'
      - in: query
        name: status
        schema:
          type: string
          enum:
          - error
          - pending
          - success
      - in: query
        name: template
        schema:
          type: integer
      tags:
      - history
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMergeHistoryList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/history/{id}/download/:
    get:
      operationId: download_created_document
      summary: download generated document if available
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this merge history.
        required: true
      tags:
      - history
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/history/{id}/retry_delivery/:
    post:
      operationId: retry_delivery
      summary: retry failed documents delivery
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this merge history.
        required: true
      tags:
      - history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MergeHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MergeHistory'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeHistory'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/history/export/:
    get:
      operationId: get_created_export_merge_history
      summary: Get created export history
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - history
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportMergeHistory'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_export_history_task
      summary: Create export history task
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportMergeHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExportMergeHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExportMergeHistory'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportMergeHistory'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/history/export/{id}/download/:
    get:
      operationId: download_created_export_document
      summary: download generated export document if available
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this export merge history
          task.
        required: true
      tags:
      - history
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/:
    get:
      operationId: list_delivery_accounts
      summary: Get list of linked accounts
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - aws_s3
          - docu_sign
          - dropbox
          - email
          - eversign
          - google_drive
          - hellosign
          - one_drive
          - podio
          - sftp
          - sign_now
          - signable
          - yousign
          - zoho
          - zoho_crm
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryAccount'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: add_delivery_account
      summary: Create linked account
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - linked_accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAccount'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAccount'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/linked_accounts/{integrator_type}/invoke/:
    get:
      operationId: invoke_integrator
      description: Redirects to oauth endpoint to add a new linked account of given
        'integrator_type'
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: environment
        schema:
          type: string
        description: 'sub-type of integrator. For example: sandbox or production for
          docu_sign'
      - in: path
        name: integrator_type
        schema:
          type: string
          pattern: ^dropbox|google_drive|one_drive|docu_sign|sign_now|podio|eversign|zoho$
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '302':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/:
    put:
      operationId: update_delivery_account
      summary: Refresh linked account
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeliveryAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateDeliveryAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDeliveryAccount'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAccount'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: revoke_delivery_account
      summary: Revoke linked account
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/deliveries/:
    get:
      operationId: list_account_deliveries
      description: List account deliveries
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
          enum:
          - aws_s3
          - docu_sign
          - dropbox
          - email
          - eversign
          - google_drive
          - hellosign
          - one_drive
          - podio
          - sftp
          - sign_now
          - signable
          - yousign
          - zoho
          - zoho_crm
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountDeliveryList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/linked_accounts/{id}/delivery_emails/:
    get:
      operationId: list_delivery_emails_for_email_account
      description: List delivery emails for email account
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                ResponseExample:
                  value:
                  - abc@gmail.com
                  - abcd@gmail.com
                  summary: Response Example
          description: An array of emails
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/docusign_folders/:
    get:
      operationId: get_docusign_folders
      description: Get docusign folders
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAccount'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/google_picker_payload/:
    get:
      operationId: get_google_picker_payload
      description: Get google picker payload
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDrivePickerPayload'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/initiate_authorization/:
    post:
      operationId: initiate_email_authorization
      description: Initiate email authorization
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailAccountAuthorizationOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailAccountAuthorizationOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailAccountAuthorizationOTP'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/reconnect/:
    get:
      operationId: reconnect_account
      description: Redirects to oauth endpoint for re-connecting an account
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '302':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/toggle_use_for_images/:
    post:
      operationId: update_delivery_accounts_use_for_images_flag
      description: Update delivery accounts use for images flag
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAccount'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/{id}/verify_otp/:
    put:
      operationId: verify_email_otp
      description: Verify email otp
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery account.
        required: true
      tags:
      - linked_accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailAccountOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailAccountOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailAccountOTP'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/linked_accounts/send_test_mail/:
    post:
      operationId: Send test mail
      description: send_test_mail
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - linked_accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestSmtpMail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendTestSmtpMail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendTestSmtpMail'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/permissions/folder/:
    get:
      operationId: get_folder_permissions
      description: Returns folder permissions
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: ids
        schema:
          type: string
      tags:
      - permissions
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A dynamic JSON object with varying keys and value types
              examples:
                ResponseExample:
                  value:
                    '199':
                    - read
                    - write
                    '1201':
                    - read
                    '90':
                    - write
                  summary: Response Example
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/permissions/global/:
    get:
      operationId: get_global_permissions
      description: Returns permission for each role
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - permissions
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalPermission'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/permissions/template/:
    get:
      operationId: get_template_permissions
      description: Returns template permissions
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: ids
        schema:
          type: string
      tags:
      - permissions
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A dynamic JSON object with varying keys and value types
              examples:
                ResponseExample:
                  value:
                    '101':
                    - read
                    - write
                    '121':
                    - read
                    '12101':
                    - write
                  summary: Response Example
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/personalization/:
    get:
      operationId: get_user_personalization
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - personalization
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPersonalization'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: update_user_personalization
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - personalization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPersonalization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPersonalization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPersonalization'
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
  /api/v2/templates/:
    get:
      operationId: list_templates
      summary: Get list of templates
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: folder
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: output_type
        schema:
          type: string
          enum:
          - docx
          - html
          - jpeg
          - pdf
          - png
          - pptx
          - xlsx
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - test
      - in: query
        name: type
        schema:
          type: string
          enum:
          - docx
          - fillable_pdf
          - g_document
          - g_presentation
          - g_spreadsheet
          - html
          - pptx
          - xlsx
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTemplateList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_template
      summary: Create template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - templates
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewTemplate'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '413':
          content:
            text/html:
              schema:
                description: Uploaded File Is Too Large.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/{id}/:
    get:
      operationId: get_template
      summary: Get one template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    put:
      operationId: update_template
      summary: Update template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Template'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    patch:
      operationId: update_template_content
      summary: Update template content
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateNewTemplate'
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '413':
          content:
            text/html:
              schema:
                description: Uploaded File Is Too Large.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: trash_template
      summary: Move template to trash
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/copy/:
    post:
      operationId: copy_template
      summary: Copy template including preferences, deliveries
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CopyTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CopyTemplate'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/download/:
    get:
      operationId: download_template_file
      summary: Download template file
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/generate/:
    post:
      operationId: generate_document
      summary: Generate document from template
      parameters:
      - in: header
        name: X-Client
        schema:
          type: string
        description: Client Origin
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: download
        schema:
          type: string
          enum:
          - 'false'
          - file
          - 'true'
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      - in: query
        name: output_type
        schema:
          type: string
          enum:
          - docx
          - html
          - pdf
          - png
          - pptx
          - xlsx
      tags:
      - generate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/inline_image/:
    post:
      operationId: upload_inline_image_of_template
      summary: Upload inline image of template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadTemplateImage'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '200':
          description: No response body
        '413':
          content:
            text/html:
              schema:
                description: Uploaded File Is Too Large.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/permanent_delete/:
    delete:
      operationId: delete_template_permanently
      summary: Delete a template permanently from trash
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/restore/:
    put:
      operationId: restore_template_from_trash
      summary: Restore a template from trash
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Template'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/schema/:
    get:
      operationId: get_template_schema
      summary: Get template schema
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSchema'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/schema/detail/:
    get:
      operationId: get_detailed_template_schema
      summary: Get template split schema
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - templates
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/test/:
    post:
      operationId: test_document_generation
      summary: Test document generation
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      - in: query
        name: output_type
        schema:
          type: string
          enum:
          - docx
          - html
          - pdf
          - png
          - pptx
          - xlsx
      tags:
      - generate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{id}/test_data/:
    get:
      operationId: get_test_data
      summary: Get test data used for testing template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - generate
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/deliveries/:
    get:
      operationId: list_template_deliveries
      summary: Get deliveries configured under this template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateDelivery'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_template_delivery
      summary: Create delivery
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolymorphicDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolymorphicDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolymorphicDelivery'
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolymorphicDelivery'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/deliveries/{id}/:
    get:
      operationId: retrieve_template_delivery
      summary: Get delivery
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolymorphicDelivery'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    put:
      operationId: update_template_delivery
      summary: Update delivery
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolymorphicDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PolymorphicDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PolymorphicDelivery'
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolymorphicDelivery'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: delete_template_delivery
      summary: Delete delivery
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/deliveries/{id}/attachments/:
    post:
      operationId: upload_delivery_attachments
      summary: upload email delivery attachments
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailDeliveryAttachment'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolymorphicDelivery'
          description: ''
        '413':
          content:
            text/html:
              schema:
                description: Uploaded File Is Too Large.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/deliveries/{id}/attachments/{attachment_id}/:
    get:
      operationId: download_delivery_attachment
      summary: download delivery attachment
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: attachment_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolymorphicDelivery'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: delete_delivery_attachment
      summary: delete email delivery attachment
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: attachment_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/deliveries/{id}/upgrade_docusign/:
    post:
      operationId: upgrade_docusign_delivery
      summary: Upgrade docusign delivery api version
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this delivery.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - template_delivery
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolymorphicDelivery'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/generate/bulk/:
    get:
      operationId: list_bulk_generation_tasks
      summary: List bulk generation tasks
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - generate_bulk
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBulkGenList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/{template_id}/generate/bulk/{id}/:
    get:
      operationId: get_bulk_generation_task
      summary: Get bulk generation task
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
          format: int32
        description: Task id
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        description: Template id
        required: true
      tags:
      - generate_bulk
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkGen'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/generate/bulk/{id}/cancel/:
    put:
      operationId: cancel_bulk_generation_task
      summary: Cancel a bulk generation task
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
          format: int32
        description: Task id
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        description: Template id
        required: true
      tags:
      - generate_bulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkGen'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkGen'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkGen'
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkGen'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/generate/bulk/{id}/draft/:
    get:
      operationId: get_bulk_generation_draft
      summary: Get a task saved as draft
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
          format: int32
        description: Task id
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        description: Template id
        required: true
      tags:
      - generate_bulk
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkGenData'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    post:
      operationId: save_bulk_generation_draft
      summary: save a template mapping
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
          format: int32
        description: Task id
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        description: Template id
        required: true
      tags:
      - generate_bulk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/generate/bulk/{id}/trigger/:
    put:
      operationId: trigger_bulk_generation_draft
      summary: Trigger a bulk generation task
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
          format: int32
        description: Task id
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        description: Template id
        required: true
      tags:
      - generate_bulk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkGen'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/generate/bulk/upload/:
    post:
      operationId: upload_for_bulk_generation
      description: This will create a task in DRAFT mode.
      summary: Upload a new csv for bulk generate.
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        description: Template id
        required: true
      tags:
      - generate_bulk
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkGenUpload'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkGenData'
          description: ''
        '413':
          content:
            text/html:
              schema:
                description: Uploaded File Is Too Large.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/merge_links/:
    get:
      operationId: list_generation_links
      description: URL to create document will be {host}/{path}
      summary: Get document create link path
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
          format: int32
        required: true
      tags:
      - generate
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentMergeLink'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/{template_id}/permissions/:
    get:
      operationId: list_template_sharing
      summary: Get all shared permissions for specific template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
        required: true
      tags:
      - templates
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateSharing'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
    post:
      operationId: create_template_sharing_permission
      summary: Create template sharing permission
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TemplateSharing'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TemplateSharing'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TemplateSharing'
        required: true
      security:
      - SessionAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateSharing'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/{template_id}/permissions/{id}/:
    get:
      operationId: get_template_sharing
      summary: Get specific permission details for given template
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this template sharing setting.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
        required: true
      tags:
      - templates
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSharing'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    patch:
      operationId: update_template_sharing_permission_content
      summary: Update template content partially
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this template sharing setting.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateTemplateSharing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateTemplateSharing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateTemplateSharing'
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSharing'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
    delete:
      operationId: revoke_template_sharing_permission
      summary: Revoke template sharing permission
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this template sharing setting.
        required: true
      - in: path
        name: template_id
        schema:
          type: integer
        required: true
      tags:
      - templates
      security:
      - SessionAuthentication: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: ''
  /api/v2/templates/all/:
    get:
      operationId: list_all_templates
      description: Will return all templates without pagination, excluding templates
        in trashed
      summary: List all templates
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/count/:
    get:
      operationId: get_user_created_templates_count
      summary: Get the count of templates created by the user.
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      - in: query
        name: owner_id
        schema:
          type: string
        description: Owner Id of resource
        required: true
      tags:
      - templates
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateCount'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/move/:
    post:
      operationId: move_templates_to_another_folder
      description: Move templates to another folder
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MoveTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MoveTemplate'
        required: true
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/sharing_status/:
    get:
      operationId: templates_sharing_status_retrieve
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - templates
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingInfoTemplate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /api/v2/templates/trash/:
    get:
      operationId: list_trashed_templates
      summary: List all templates in trash.
      parameters:
      - in: header
        name: X-Workspace
        schema:
          type: string
        description: Organization unique_key
        required: true
      tags:
      - templates
      security:
      - OAuthAuthentication: []
      - SessionAuthentication: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /banner_notifications/:
    get:
      operationId: list_banner_notifications
      tags:
      - general
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerNotification'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /meta/:
    get:
      operationId: get_app_meta
      tags:
      - general
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meta'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /plans/:
    get:
      operationId: list_subscription_plans
      tags:
      - general
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
  /tz/:
    get:
      operationId: list_timezones
      tags:
      - general
      security:
      - SessionAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timezone'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: ''
components:
  schemas:
    AITemplateCreate:
      type: object
      properties:
        ai_prompt:
          type: string
        title:
          type: string
          maxLength: 120
        description:
          type: string
          nullable: true
          maxLength: 255
        folder:
          type: integer
          nullable: true
      required:
      - ai_prompt
      - title
      description: ''
    AITemplateEdit:
      type: object
      properties:
        ai_prompt:
          type: string
          writeOnly: true
        selected_content:
          type: string
          writeOnly: true
        ai_response:
          type: string
          readOnly: true
      required:
      - ai_prompt
      - ai_response
      - selected_content
      description: ''
    AcceptInvite:
      type: object
      properties:
        workspace_unique_key:
          type: string
      required:
      - workspace_unique_key
      description: ''
    AccountDelivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        last_used_on:
          type: string
          format: date-time
          nullable: true
        template_info:
          $ref: '#/components/schemas/TemplateInfo'
      required:
      - id
      - name
      - template_info
      description: ''
    AppendFiles:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
        output_file_name:
          type: string
      required:
      - files
      description: ''
    AttachmentsConfig:
      type: object
      properties:
        allowed_types:
          type: string
        max_files:
          type: integer
        max_total_size:
          type: integer
      required:
      - allowed_types
      - max_files
      - max_total_size
      description: ''
    AuthToken:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_used_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        active:
          type: boolean
          default: true
      required:
      - created_time
      - id
      - last_used_time
      - name
      - token
      description: ''
    BannerNotification:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        action:
          $ref: '#/components/schemas/BannerNotificationAction'
      required:
      - action
      - description
      - id
      - name
      description: ''
    BannerNotificationAction:
      type: object
      properties:
        text:
          type: string
        attributes:
          type: object
          additionalProperties: {}
      required:
      - attributes
      - text
      description: ''
    BulkGen:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BulkGenTask'
          readOnly: true
        file_name:
          type: string
          readOnly: true
        status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
          minimum: 0
          maximum: 32767
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        total:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        success:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        updated_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: integer
          readOnly: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_by
      - errors
      - file_name
      - id
      - updated_by
      - updated_time
    BulkGenData:
      type: object
      properties:
        id:
          type: integer
        data:
          type: object
          additionalProperties: {}
        row_count:
          type: integer
        suggested_mapping:
          type: object
          additionalProperties: {}
      required:
      - data
      - id
      - row_count
      - suggested_mapping
      description: ''
    BulkGenTask:
      type: object
      properties:
        status_message:
          type: string
          nullable: true
          maxLength: 255
      description: ''
    BulkGenUpload:
      type: object
      properties:
        file:
          type: string
          format: binary
      required:
      - file
      description: ''
    BulkGenerateMeta:
      type: object
      properties:
        max_test_rows:
          type: integer
      required:
      - max_test_rows
      description: ''
    CSMDetails:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        phone_number:
          type: string
          maxLength: 20
      required:
      - name
      - phone_number
      description: ''
    ChangeRole:
      type: object
      properties:
        role:
          enum:
          - owner
          - admin
          - manager
          - member
          - billing_manager
          type: string
      required:
      - role
      description: ''
    ChargebeeSubscription:
      type: object
      properties:
        plan_id:
          type: string
          nullable: true
          maxLength: 255
        status:
          enum:
          - a
          - t
          - e
          - c
          - p
          type: string
        trial_end:
          type: string
          format: date-time
        billing_period_unit:
          type: string
          nullable: true
          maxLength: 255
        current_term_start:
          type: string
          readOnly: true
        current_term_end:
          type: string
          readOnly: true
        unpaid_invoices:
          type: integer
          maximum: 2147483647
          minimum: 0
        max_allowed_unpaid_invoices:
          type: integer
          maximum: 2147483647
          minimum: 0
        overage_enabled:
          type: boolean
        documents_allowed:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        documents_created:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        can_extend_trial:
          type: boolean
          readOnly: true
        subscribed_on:
          type: string
          readOnly: true
      required:
      - can_extend_trial
      - current_term_end
      - current_term_start
      - overage_enabled
      - subscribed_on
      description: ''
    ChatThreads:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        thread_id:
          type: string
          maxLength: 200
        thread_name:
          type: string
          nullable: true
          maxLength: 200
        tokens_used:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        model_name:
          type: string
          maxLength: 200
      required:
      - id
      - model_name
      - thread_id
      description: ''
    ChildTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        type:
          enum:
          - docx
          - html
          - fillable_pdf
          - pptx
          - xlsx
          - g_document
          - g_presentation
          - g_spreadsheet
          type: string
        created_time:
          type: string
          format: date-time
          readOnly: true
        updated_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        document_status:
          enum:
          - active
          - test
          type: string
        deleted_time:
          type: string
          format: date-time
          nullable: true
        created_by:
          type: integer
          readOnly: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
        folder:
          type: integer
          nullable: true
      required:
      - created_by
      - created_time
      - id
      - title
      - updated_by
      - updated_time
      description: ''
    CopyTemplate:
      type: object
      properties:
        title:
          type: string
          maxLength: 120
      required:
      - title
      description: ''
    CreateCustomerThreadInput:
      type: object
      properties:
        message:
          type: string
          writeOnly: true
      required:
      - message
      description: ''
    CreateCustomerThreadOutput:
      type: object
      properties:
        output_message:
          type: string
        thread_id:
          type: integer
        thread_display_name:
          type: string
      required:
      - output_message
      - thread_display_name
      - thread_id
      description: ''
    DeleteCurrentWorkspace:
      type: object
      properties:
        otp:
          type: string
          writeOnly: true
      required:
      - otp
      description: ''
    DeliveryAccount:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        type:
          enum:
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        sub_type:
          type: string
          readOnly: true
        used_by:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        credentials:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_expired:
          type: boolean
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        use_for_images:
          type: boolean
      required:
      - credentials
      - id
      - is_expired
      - name
      - sub_type
      - type
      - updated_at
      - used_by
    DocuSignDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        custom_tags:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                type: object
          nullable: true
        signers:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              order:
                type: string
              recipient_type:
                type: string
                enum:
                - signer
                - agent
                - cc
                - editor
              name:
                type: string
                minLength: 1
              is_email_delivery:
                type: boolean
              is_sms_delivery:
                type: boolean
              email_address:
                type: string
                format: email
                minLength: 2
              country_code:
                type: string
              phone_number:
                type: string
            required:
            - recipient_type
            - name
            - is_email_delivery
            - is_sms_delivery
        reminder_settings:
          type: object
          nullable: true
          properties:
            reminder_delay:
              type: number
            reminder_frequency:
              type: number
          required:
          - reminder_delay
          - reminder_frequency
        overwrite_account_defaults:
          type: boolean
          default: false
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        subject:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        fullname_anchor_tags:
          type: boolean
        sequenced_signing:
          type: boolean
        expire_after:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        enable_optional_signers:
          type: boolean
        api_version:
          enum:
          - '2.0'
          - '2.1'
          type: string
          readOnly: true
        folder_id:
          type: string
          nullable: true
          maxLength: 52
        folder_name:
          type: string
          nullable: true
        allow_reassign:
          type: boolean
      required:
      - account
      - api_version
      - id
      - name
      - signers
    DocumentMergeLink:
      type: object
      properties:
        path:
          type: string
          readOnly: true
      required:
      - path
      description: ''
    Domain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        domain_name:
          type: string
          maxLength: 255
        txt_record:
          type: string
          maxLength: 60
        is_txt_verified:
          type: boolean
        is_spf_verified:
          type: boolean
        spf_record:
          type: string
          readOnly: true
      required:
      - domain_name
      - id
      - spf_record
      - txt_record
      description: ''
    DomainFailure:
      type: object
      properties:
        spf_record:
          type: string
        txt_record:
          type: string
      required:
      - spf_record
      - txt_record
      description: ''
    DomainVerify:
      type: object
      properties:
        success:
          type: array
          items:
            enum:
            - txt_record
            - spf_record
            type: string
        failures:
          $ref: '#/components/schemas/DomainFailure'
      required:
      - failures
      - success
      description: ''
    DropboxDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        folder:
          type: string
        mode:
          enum:
          - add_as_new
          - conflict
          - overwrite
          type: string
      required:
      - account
      - id
      - name
    DynamicImage:
      type: object
      properties:
        token:
          type: string
          minLength: 1
        page:
          type: integer
          default: 1
        left:
          type: number
          format: double
        top:
          type: number
          format: double
        width:
          type: number
          format: double
        height:
          type: number
          format: double
      required:
      - height
      - left
      - token
      - top
      - width
      description: ''
    EmailDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
          readOnly: true
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        from_email:
          type: string
          nullable: true
          maxLength: 255
        to_email:
          type: array
          items:
            type: string
            maxLength: 200
        cc:
          type: array
          items:
            type: string
            maxLength: 200
        bcc:
          type: array
          items:
            type: string
            maxLength: 200
        headers:
          type: object
          additionalProperties: {}
          nullable: true
        subject:
          type: string
          maxLength: 255
        body:
          type: string
        enable_optional_recipients:
          type: boolean
      required:
      - account
      - attachments
      - id
      - name
      - to_email
    EmailDeliveryAttachment:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: binary
      required:
      - attachments
      description: ''
    EversignDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        signers:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              pin:
                type: string
              name:
                type: string
                minLength: 1
              email:
                type: string
                format: email
              order:
                type: string
            required:
            - name
            - email
        recipients:
          type: array
          minItems: 0
          items:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              email:
                type: string
                format: email
            required:
            - name
            - email
          nullable: true
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        use_signer_order:
          type: boolean
        reminders:
          type: boolean
        require_all_signers:
          type: boolean
        expires_in:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        enable_optional_signers:
          type: boolean
      required:
      - account
      - id
      - name
      - signers
    ExportMergeHistory:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        from_date:
          type: string
          format: date
        to_date:
          type: string
          format: date
        status:
          enum:
          - pending
          - success
          - error
          type: string
      required:
      - from_date
      - id
      - name
      - to_date
    File:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        path:
          type: string
          writeOnly: true
          maxLength: 255
        name:
          type: string
          maxLength: 255
        tag:
          type: string
          writeOnly: true
          maxLength: 255
        size:
          type: integer
          readOnly: true
      required:
      - id
      - name
      - path
      - size
      - tag
    FileUploadMeta:
      type: object
      properties:
        email_attachments:
          $ref: '#/components/schemas/AttachmentsConfig'
      required:
      - email_attachments
      description: ''
    FillablePdfSettings:
      type: object
      properties:
        width:
          type: number
          format: double
        height:
          type: number
          format: double
        no_of_pages:
          type: integer
          maximum: 2147483647
          minimum: 0
        dynamic_images:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
      required:
      - height
      - no_of_pages
      - width
      description: ''
    Folder:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        created_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: integer
          readOnly: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_by
      - created_time
      - id
      - name
      - updated_by
      - updated_time
    FolderCount:
      type: object
      properties:
        folders_count:
          type: integer
      required:
      - folders_count
      description: ''
    FolderSharing:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        permission:
          enum:
          - read
          - write
          - manage
          type: string
        user:
          type: integer
      required:
      - id
      - user
    ForbiddenError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
      description: ''
    GalleryCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
      description: ''
    GlobalPermission:
      type: object
      properties:
        templates:
          type: boolean
        folders:
          type: boolean
        workspace:
          type: boolean
        workspace:update:
          type: boolean
        workspace:delete:
          type: boolean
        billing:
          type: boolean
        team:manage:
          type: boolean
        integrations:
          type: boolean
        reports:
          type: boolean
        api_settings:
          type: boolean
      required:
      - api_settings
      - billing
      - folders
      - integrations
      - reports
      - team:manage
      - templates
      - workspace
      - workspace:delete
      - workspace:update
      description: ''
    GoogleDriveDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        folder:
          type: string
          description: Base folder name
        folder_id:
          type: string
          nullable: true
          description: Base folder id
          maxLength: 100
        path:
          type: string
          nullable: true
          description: Dynamic folder path
          maxLength: 255
      required:
      - account
      - id
      - name
    GoogleDrivePickerPayload:
      type: object
      properties:
        payload:
          type: string
      required:
      - payload
      description: ''
    HelloSignDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        signers:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              email_address:
                type: string
                format: email
            required:
            - name
            - email_address
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        cc:
          type: array
          items:
            type: string
            maxLength: 1000
        use_text_tags:
          type: boolean
        hide_text_tags:
          type: boolean
        sequenced_signing:
          type: boolean
        enable_optional_signers:
          type: boolean
      required:
      - account
      - id
      - name
      - signers
    HostedPage:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
      description: ''
    InitiateAuthorizationSequence:
      type: object
      properties:
        action_name:
          enum:
          - delete workspace
          - transfer ownership
          type: string
          default: delete workspace
      description: ''
    Invitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        workspace:
          type: string
          readOnly: true
        sender:
          type: string
          readOnly: true
        expired:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        role:
          enum:
          - admin
          - manager
          - member
          - billing_manager
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
        accepted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_accepted:
          type: boolean
          readOnly: true
        invite_key:
          type: string
          readOnly: true
      required:
      - accepted_at
      - created_at
      - email
      - expired
      - expires_at
      - id
      - invite_key
      - is_accepted
      - role
      - sender
      - workspace
      description: ''
    MergeHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        template:
          allOf:
          - $ref: '#/components/schemas/ChildTemplate'
          readOnly: true
          nullable: true
        data:
          type: object
          additionalProperties: {}
        data_expired:
          type: boolean
        document_expired:
          type: boolean
        delivery_type:
          type: string
          maxLength: 255
        status:
          enum:
          - pending
          - success
          - error
          type: string
        created_time:
          type: string
          format: date-time
          readOnly: true
        created_file_name:
          type: string
          maxLength: 255
        message:
          type: object
          additionalProperties: {}
          nullable: true
        mode:
          type: string
          nullable: true
          maxLength: 255
        callback_status:
          enum:
          - success
          - fail
          - null
          type: string
          nullable: true
        callback_failure_message:
          type: string
          nullable: true
        delivery:
          type: integer
          nullable: true
      required:
      - created_file_name
      - created_time
      - data
      - data_expired
      - delivery_type
      - document_expired
      - id
      - status
      - template
      description: ''
    Meta:
      type: object
      properties:
        file_uploads:
          $ref: '#/components/schemas/FileUploadMeta'
        batch_process_max_allowed_test_rows:
          $ref: '#/components/schemas/BulkGenerateMeta'
        iam:
          type: string
      required:
      - batch_process_max_allowed_test_rows
      - file_uploads
      - iam
      description: ''
    MoveTemplate:
      type: object
      properties:
        template_ids:
          type: array
          items:
            type: integer
        new_folder_id:
          type: integer
          nullable: true
      required:
      - new_folder_id
      - template_ids
      description: ''
    NewTemplate:
      type: object
      description: ''
      properties:
        file:
          type: string
          format: binary
        folder:
          type: integer
          nullable: true
        title:
          type: string
          maxLength: 120
        output_type:
          enum:
          - html
          - pdf
          - jpeg
          - png
          - docx
          - pptx
          - xlsx
          type: string
        description:
          type: string
          nullable: true
          maxLength: 255
        template_gallery_id:
          type: integer
      required:
      - output_type
      - title
    NotFoundError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
      description: ''
    NpsNextReminder:
      type: object
      properties:
        days:
          type: integer
      required:
      - days
      description: ''
    NpsRating:
      type: object
      properties:
        nps_rating:
          type: integer
          maximum: 10
          minimum: 0
          nullable: true
      description: ''
    OneDriveDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        folder:
          type: string
      required:
      - account
      - id
      - name
    PaginatedAccountDeliveryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountDelivery'
    PaginatedBulkGenList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkGen'
    PaginatedMergeHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MergeHistory'
    PaginatedTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    PatchedDomain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        domain_name:
          type: string
          maxLength: 255
        txt_record:
          type: string
          maxLength: 60
        is_txt_verified:
          type: boolean
        is_spf_verified:
          type: boolean
        spf_record:
          type: string
          readOnly: true
      description: ''
    PatchedUpdateFolderSharing:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        permission:
          enum:
          - read
          - write
          - manage
          type: string
        user:
          type: integer
          readOnly: true
    PatchedUpdateNewTemplate:
      type: object
      description: ''
      properties:
        file:
          type: string
          format: binary
    PatchedUpdateTemplateSharing:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        permission:
          enum:
          - read
          - write
          - manage
          type: string
        user:
          type: integer
          readOnly: true
    PatchedUpdateUser:
      type: object
      properties:
        locale:
          type: string
          nullable: true
          maxLength: 5
        theme:
          enum:
          - light
          - dark
          - system
          type: string
      description: ''
    PatchedWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        org_name:
          type: string
          maxLength: 255
        unique_key:
          type: string
          readOnly: true
        role:
          type: string
          readOnly: true
        timezone:
          enum:
          - Pacific/Midway
          - America/Adak
          - Pacific/Honolulu
          - Pacific/Marquesas
          - America/Anchorage
          - America/Tijuana
          - America/Los_Angeles
          - America/Phoenix
          - America/Chihuahua
          - America/Denver
          - America/Belize
          - America/Chicago
          - Pacific/Easter
          - America/Mexico_City
          - America/Regina
          - America/Bogota
          - America/Cancun
          - America/New_York
          - America/Port-au-Prince
          - America/Havana
          - America/Indiana/Indianapolis
          - America/Asuncion
          - America/Halifax
          - America/Caracas
          - America/Cuiaba
          - America/Manaus
          - America/Santiago
          - America/Grand_Turk
          - America/St_Johns
          - America/Fortaleza
          - America/Sao_Paulo
          - America/Cayenne
          - America/Buenos_Aires
          - America/Godthab
          - America/Montevideo
          - America/Miquelon
          - America/Bahia
          - America/Noronha
          - Atlantic/Azores
          - Atlantic/Cape_Verde
          - UTC
          - Africa/Casablanca
          - Europe/London
          - Africa/Monrovia
          - Europe/Amsterdam
          - Europe/Belgrade
          - Europe/Brussels
          - Europe/Warsaw
          - Africa/Algiers
          - Africa/Windhoek
          - Asia/Amman
          - Europe/Athens
          - Asia/Beirut
          - Africa/Cairo
          - Asia/Damascus
          - Asia/Gaza
          - Africa/Harare
          - Europe/Helsinki
          - Asia/Jerusalem
          - Europe/Kaliningrad
          - Africa/Tripoli
          - Asia/Baghdad
          - Asia/Istanbul
          - Asia/Kuwait
          - Europe/Minsk
          - Europe/Moscow
          - Africa/Nairobi
          - Asia/Tehran
          - Asia/Muscat
          - Europe/Astrakhan
          - Asia/Baku
          - Europe/Samara
          - Indian/Mauritius
          - Asia/Tbilisi
          - Asia/Yerevan
          - Asia/Kabul
          - Asia/Tashkent
          - Asia/Yekaterinburg
          - Asia/Karachi
          - Asia/Kolkata
          - Asia/Colombo
          - Asia/Katmandu
          - Asia/Almaty
          - Asia/Dhaka
          - Asia/Rangoon
          - Asia/Novosibirsk
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Hovd
          - Asia/Krasnoyarsk
          - Asia/Tomsk
          - Asia/Chongqing
          - Asia/Irkutsk
          - Asia/Kuala_Lumpur
          - Australia/Perth
          - Asia/Taipei
          - Asia/Ulaanbaatar
          - Asia/Pyongyang
          - Australia/Eucla
          - Asia/Chita
          - Asia/Tokyo
          - Asia/Seoul
          - Asia/Yakutsk
          - Australia/Adelaide
          - Australia/Darwin
          - Australia/Brisbane
          - Australia/Canberra
          - Pacific/Guam
          - Australia/Hobart
          - Asia/Vladivostok
          - Australia/Lord_Howe
          - Pacific/Bougainville
          - Asia/Srednekolymsk
          - Asia/Magadan
          - Pacific/Norfolk
          - Asia/Sakhalin
          - Pacific/Guadalcanal
          - Asia/Anadyr
          - Pacific/Auckland
          - Pacific/Fiji
          - Pacific/Chatham
          - Pacific/Tongatapu
          - Pacific/Apia
          - Pacific/Kiritimati
          type: string
          readOnly: true
        plan_id:
          type: string
          nullable: true
          readOnly: true
        plan_status:
          type: string
          readOnly: true
        active:
          type: boolean
          readOnly: true
        mfa_enforced:
          type: boolean
        use_froala:
          type: boolean
          readOnly: true
        created_time:
          type: string
          format: date-time
          readOnly: true
      description: ''
    Plan:
      type: object
      properties:
        plan_id:
          type: string
          readOnly: true
        documents_allowed:
          type: integer
          readOnly: true
        price:
          type: integer
          readOnly: true
        billing_period_unit:
          enum:
          - year
          - month
          type: string
          readOnly: true
      required:
      - billing_period_unit
      - documents_allowed
      - plan_id
      - price
      description: ''
    PolymorphicDelivery:
      oneOf:
      - $ref: '#/components/schemas/EmailDelivery'
      - $ref: '#/components/schemas/WebhookDelivery'
      - $ref: '#/components/schemas/DropboxDelivery'
      - $ref: '#/components/schemas/OneDriveDelivery'
      - $ref: '#/components/schemas/SignNowDelivery'
      - $ref: '#/components/schemas/GoogleDriveDelivery'
      - $ref: '#/components/schemas/S3Delivery'
      - $ref: '#/components/schemas/HelloSignDelivery'
      - $ref: '#/components/schemas/DocuSignDelivery'
      - $ref: '#/components/schemas/EversignDelivery'
      - $ref: '#/components/schemas/SignableDelivery'
      - $ref: '#/components/schemas/YouSignDelivery'
      - $ref: '#/components/schemas/SftpDelivery'
      discriminator:
        propertyName: type
        mapping:
          email: '#/components/schemas/EmailDelivery'
          webhook: '#/components/schemas/WebhookDelivery'
          dropbox: '#/components/schemas/DropboxDelivery'
          one_drive: '#/components/schemas/OneDriveDelivery'
          sign_now: '#/components/schemas/SignNowDelivery'
          google_drive: '#/components/schemas/GoogleDriveDelivery'
          aws_s3: '#/components/schemas/S3Delivery'
          hellosign: '#/components/schemas/HelloSignDelivery'
          docu_sign: '#/components/schemas/DocuSignDelivery'
          eversign: '#/components/schemas/EversignDelivery'
          signable: '#/components/schemas/SignableDelivery'
          yousign: '#/components/schemas/YouSignDelivery'
          sftp: '#/components/schemas/SftpDelivery'
    PromptSuggestions:
      type: object
      properties:
        template_title:
          type: string
          writeOnly: true
        template_description:
          type: string
          writeOnly: true
          nullable: true
        prompts:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - prompts
      - template_title
      description: ''
    RenewSubscription:
      type: object
      properties:
        upgrade_message:
          type: string
          maxLength: 200
      description: ''
    RetentionPreference:
      type: object
      properties:
        merge_data:
          type: string
        generated_document:
          type: string
      description: ''
    S3Delivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        bucket:
          type: string
          maxLength: 2000
        key_prefix:
          type: string
          nullable: true
          maxLength: 2000
        region:
          type: string
          nullable: true
          maxLength: 50
      required:
      - account
      - bucket
      - id
      - name
    SaveCustomerFeedback:
      type: object
      properties:
        feedback:
          type: object
          nullable: false
          properties:
            challenges_faced:
              type: array
            feature_improvement:
              type: string
          required:
          - challenges_faced
      required:
      - feedback
      description: ''
    SendEmailAccountAuthorizationOTP:
      type: object
      properties:
        action_name:
          enum:
          - verify
          - update
          type: string
        email:
          type: string
          format: email
          nullable: true
      required:
      - action_name
      description: ''
    SendTestSmtpMail:
      type: object
      properties:
        smtp_server_address:
          type: string
          maxLength: 255
        smtp_server_username:
          type: string
          maxLength: 255
        smtp_server_password:
          type: string
          maxLength: 255
        smtp_port:
          type: integer
        smtp_encryption_type:
          enum:
          - TLS
          - SSL
          type: string
        email:
          type: string
          format: email
      required:
      - email
      - smtp_encryption_type
      - smtp_port
      - smtp_server_address
      - smtp_server_password
      - smtp_server_username
      description: ''
    SftpDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        path:
          type: string
          nullable: true
          maxLength: 255
      required:
      - account
      - id
      - name
    SharingInfoFolder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_shared:
          type: boolean
          readOnly: true
      required:
      - id
      - is_shared
      description: ''
    SharingInfoTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_shared:
          type: boolean
          readOnly: true
      required:
      - id
      - is_shared
      description: ''
    SignNowDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        signers:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              order:
                type: string
              role:
                type: string
                minLength: 1
              email:
                type: string
                format: email
            required:
            - role
            - email
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        subject:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        cc:
          type: array
          items:
            type: string
            maxLength: 1000
        sequenced_signing:
          type: boolean
        enable_optional_signers:
          type: boolean
      required:
      - account
      - id
      - name
      - signers
    SignableDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        parties:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              party_name:
                type: string
                minLength: 1
              party_email:
                type: string
                format: email
              party_role:
                type: string
                enum:
                - signer
                - copy
            required:
            - party_name
            - party_email
            - party_role
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        expire_after:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
        remind_after:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
      required:
      - account
      - id
      - name
      - parties
    SurveyPrompt:
      type: object
      properties:
        show_survey_prompt:
          type: boolean
          readOnly: true
      required:
      - show_survey_prompt
      description: ''
    TeamMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        role:
          enum:
          - owner
          - admin
          - manager
          - member
          - billing_manager
          type: string
        is_deleted:
          type: boolean
      required:
      - id
      - user
      description: ''
    Template:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        preferences:
          $ref: '#/components/schemas/TemplateSettings'
        title:
          type: string
          maxLength: 120
        description:
          type: string
          nullable: true
          maxLength: 255
        type:
          enum:
          - docx
          - html
          - fillable_pdf
          - pptx
          - xlsx
          - g_document
          - g_presentation
          - g_spreadsheet
          type: string
          readOnly: true
        created_time:
          type: string
          format: date-time
          readOnly: true
        updated_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        document_status:
          enum:
          - active
          - test
          type: string
        deleted_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: integer
          readOnly: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
        folder:
          type: integer
          nullable: true
      required:
      - created_by
      - created_time
      - deleted_time
      - id
      - title
      - type
      - updated_by
      - updated_time
    TemplateCount:
      type: object
      properties:
        templates_count:
          type: integer
      required:
      - templates_count
      description: ''
    TemplateDelivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
          readOnly: true
      required:
      - id
      - name
      - type
      description: ''
    TemplateGallery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image_path:
          type: string
          readOnly: true
        file_type:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/GalleryCategory'
        title:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 255
        images_count:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
      required:
      - category
      - file_type
      - id
      - image_path
      - title
      description: ''
    TemplateInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      required:
      - id
      - name
      - status
      - type
      description: ''
    TemplateSchema:
      type: object
      properties:
        name:
          type: string
        type:
          enum:
          - string
          - array
          - object
          - generic
          type: string
        generics:
          enum:
          - string
          - array
          - object
          - generic
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/TemplateSchema'
      required:
      - fields
      - generics
      - name
      - type
      description: ''
    TemplateSettings:
      type: object
      properties:
        margin:
          type: object
          additionalProperties: false
          properties:
            top:
              type: number
              format: float
              minimum: 0
              maximum: 11
            left:
              type: number
              format: float
              minimum: 0
              maximum: 8
            right:
              type: number
              format: float
              minimum: 0
              maximum: 8
            bottom:
              type: number
              format: float
              minimum: 0
              maximum: 11
          nullable: true
        timezone:
          type: string
        info:
          allOf:
          - $ref: '#/components/schemas/FillablePdfSettings'
          readOnly: true
        dynamic_images:
          type: array
          items:
            $ref: '#/components/schemas/DynamicImage'
          nullable: true
        output_file_name:
          type: string
          maxLength: 255
        output_type:
          enum:
          - html
          - pdf
          - jpeg
          - png
          - docx
          - pptx
          - xlsx
          type: string
        password:
          type: string
          nullable: true
          maxLength: 255
        format:
          enum:
          - A3
          - A4
          - A5
          - Legal
          - Letter
          - Tabloid
          - Custom
          type: string
        orientation:
          enum:
          - portrait
          - landscape
          type: string
        header:
          type: string
          nullable: true
        footer:
          type: string
          nullable: true
        width:
          type: number
          format: double
          maximum: 180
          minimum: 0.4
          nullable: true
        height:
          type: number
          format: double
          maximum: 250
          minimum: 0.5
          nullable: true
        auto_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          nullable: true
        flatten_pdf:
          type: boolean
        emulate_mode:
          enum:
          - print
          - screen
          - null
          type: string
          nullable: true
      required:
      - info
      description: ''
    TemplateSharing:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        permission:
          enum:
          - read
          - write
          - manage
          type: string
        user:
          type: integer
      required:
      - id
      - user
    ThreadMessages:
      type: object
      properties:
        messages:
          type: object
          additionalProperties: {}
      required:
      - messages
      description: ''
    Timezone:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        tz:
          type: string
          readOnly: true
      required:
      - name
      - tz
      description: ''
    TransferOwnership:
      type: object
      properties:
        transfer_to:
          type: integer
        otp:
          type: integer
      required:
      - otp
      - transfer_to
      description: ''
    UnauthenticatedError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
      description: ''
    UpdateCustomerThreadInput:
      type: object
      properties:
        message:
          type: string
          writeOnly: true
      required:
      - message
      description: ''
    UpdateCustomerThreadOutput:
      type: object
      properties:
        output_message:
          type: string
      required:
      - output_message
      description: ''
    UpdateDeliveryAccount:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        type:
          enum:
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
          readOnly: true
        sub_type:
          type: string
          readOnly: true
        used_by:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        credentials:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_expired:
          type: boolean
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        use_for_images:
          type: boolean
      required:
      - credentials
      - id
      - is_expired
      - name
      - sub_type
      - type
      - updated_at
      - used_by
    UpdateThreadName:
      type: object
      properties:
        thread_name:
          type: string
          writeOnly: true
      required:
      - thread_name
      description: ''
    UploadTemplateImage:
      type: object
      properties:
        upload:
          type: string
          format: binary
      required:
      - upload
      description: ''
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        guid:
          type: string
          format: uuid
          readOnly: true
          description: globally unique identifier for user
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 255
        timezone:
          enum:
          - Pacific/Midway
          - America/Adak
          - Pacific/Honolulu
          - Pacific/Marquesas
          - America/Anchorage
          - America/Tijuana
          - America/Los_Angeles
          - America/Phoenix
          - America/Chihuahua
          - America/Denver
          - America/Belize
          - America/Chicago
          - Pacific/Easter
          - America/Mexico_City
          - America/Regina
          - America/Bogota
          - America/Cancun
          - America/New_York
          - America/Port-au-Prince
          - America/Havana
          - America/Indiana/Indianapolis
          - America/Asuncion
          - America/Halifax
          - America/Caracas
          - America/Cuiaba
          - America/Manaus
          - America/Santiago
          - America/Grand_Turk
          - America/St_Johns
          - America/Fortaleza
          - America/Sao_Paulo
          - America/Cayenne
          - America/Buenos_Aires
          - America/Godthab
          - America/Montevideo
          - America/Miquelon
          - America/Bahia
          - America/Noronha
          - Atlantic/Azores
          - Atlantic/Cape_Verde
          - UTC
          - Africa/Casablanca
          - Europe/London
          - Africa/Monrovia
          - Europe/Amsterdam
          - Europe/Belgrade
          - Europe/Brussels
          - Europe/Warsaw
          - Africa/Algiers
          - Africa/Windhoek
          - Asia/Amman
          - Europe/Athens
          - Asia/Beirut
          - Africa/Cairo
          - Asia/Damascus
          - Asia/Gaza
          - Africa/Harare
          - Europe/Helsinki
          - Asia/Jerusalem
          - Europe/Kaliningrad
          - Africa/Tripoli
          - Asia/Baghdad
          - Asia/Istanbul
          - Asia/Kuwait
          - Europe/Minsk
          - Europe/Moscow
          - Africa/Nairobi
          - Asia/Tehran
          - Asia/Muscat
          - Europe/Astrakhan
          - Asia/Baku
          - Europe/Samara
          - Indian/Mauritius
          - Asia/Tbilisi
          - Asia/Yerevan
          - Asia/Kabul
          - Asia/Tashkent
          - Asia/Yekaterinburg
          - Asia/Karachi
          - Asia/Kolkata
          - Asia/Colombo
          - Asia/Katmandu
          - Asia/Almaty
          - Asia/Dhaka
          - Asia/Rangoon
          - Asia/Novosibirsk
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Hovd
          - Asia/Krasnoyarsk
          - Asia/Tomsk
          - Asia/Chongqing
          - Asia/Irkutsk
          - Asia/Kuala_Lumpur
          - Australia/Perth
          - Asia/Taipei
          - Asia/Ulaanbaatar
          - Asia/Pyongyang
          - Australia/Eucla
          - Asia/Chita
          - Asia/Tokyo
          - Asia/Seoul
          - Asia/Yakutsk
          - Australia/Adelaide
          - Australia/Darwin
          - Australia/Brisbane
          - Australia/Canberra
          - Pacific/Guam
          - Australia/Hobart
          - Asia/Vladivostok
          - Australia/Lord_Howe
          - Pacific/Bougainville
          - Asia/Srednekolymsk
          - Asia/Magadan
          - Pacific/Norfolk
          - Asia/Sakhalin
          - Pacific/Guadalcanal
          - Asia/Anadyr
          - Pacific/Auckland
          - Pacific/Fiji
          - Pacific/Chatham
          - Pacific/Tongatapu
          - Pacific/Apia
          - Pacific/Kiritimati
          type: string
        locale:
          type: string
          nullable: true
          maxLength: 5
        theme:
          enum:
          - light
          - dark
          - system
          type: string
          readOnly: true
        g2_verified:
          type: boolean
          readOnly: true
        is_mfa_enabled:
          type: boolean
      required:
      - email
      - g2_verified
      - guid
      - id
      - theme
      description: ''
    UserPersonalization:
      type: object
      properties:
        ui_version:
          enum:
          - 1
          - 2
          type: integer
        list_view:templates:
          $ref: '#/components/schemas/UserPersonalizationListViewTemplate'
        tp:freshchat:restoreId:
          type: string
          format: uuid
      description: ''
    UserPersonalizationListViewTemplate:
      type: object
      properties:
        type:
          enum:
          - card
          - template
          type: string
      required:
      - type
      description: ''
    ValidationError:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        non_field_errors:
          type: array
          items:
            type: string
      required:
      - errors
      - non_field_errors
      description: ''
    VerifyEmailAccountOTP:
      type: object
      properties:
        action_name:
          enum:
          - verify
          - update
          type: string
        email:
          type: string
          format: email
          nullable: true
        otp:
          type: string
          maxLength: 6
      required:
      - action_name
      - otp
      description: ''
    WebhookDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          maxLength: 255
        headers:
          type: object
          additionalProperties: {}
          nullable: true
        payload:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - id
      - name
      - url
    Workspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        org_name:
          type: string
          maxLength: 255
        unique_key:
          type: string
          readOnly: true
        role:
          type: string
          readOnly: true
        timezone:
          enum:
          - Pacific/Midway
          - America/Adak
          - Pacific/Honolulu
          - Pacific/Marquesas
          - America/Anchorage
          - America/Tijuana
          - America/Los_Angeles
          - America/Phoenix
          - America/Chihuahua
          - America/Denver
          - America/Belize
          - America/Chicago
          - Pacific/Easter
          - America/Mexico_City
          - America/Regina
          - America/Bogota
          - America/Cancun
          - America/New_York
          - America/Port-au-Prince
          - America/Havana
          - America/Indiana/Indianapolis
          - America/Asuncion
          - America/Halifax
          - America/Caracas
          - America/Cuiaba
          - America/Manaus
          - America/Santiago
          - America/Grand_Turk
          - America/St_Johns
          - America/Fortaleza
          - America/Sao_Paulo
          - America/Cayenne
          - America/Buenos_Aires
          - America/Godthab
          - America/Montevideo
          - America/Miquelon
          - America/Bahia
          - America/Noronha
          - Atlantic/Azores
          - Atlantic/Cape_Verde
          - UTC
          - Africa/Casablanca
          - Europe/London
          - Africa/Monrovia
          - Europe/Amsterdam
          - Europe/Belgrade
          - Europe/Brussels
          - Europe/Warsaw
          - Africa/Algiers
          - Africa/Windhoek
          - Asia/Amman
          - Europe/Athens
          - Asia/Beirut
          - Africa/Cairo
          - Asia/Damascus
          - Asia/Gaza
          - Africa/Harare
          - Europe/Helsinki
          - Asia/Jerusalem
          - Europe/Kaliningrad
          - Africa/Tripoli
          - Asia/Baghdad
          - Asia/Istanbul
          - Asia/Kuwait
          - Europe/Minsk
          - Europe/Moscow
          - Africa/Nairobi
          - Asia/Tehran
          - Asia/Muscat
          - Europe/Astrakhan
          - Asia/Baku
          - Europe/Samara
          - Indian/Mauritius
          - Asia/Tbilisi
          - Asia/Yerevan
          - Asia/Kabul
          - Asia/Tashkent
          - Asia/Yekaterinburg
          - Asia/Karachi
          - Asia/Kolkata
          - Asia/Colombo
          - Asia/Katmandu
          - Asia/Almaty
          - Asia/Dhaka
          - Asia/Rangoon
          - Asia/Novosibirsk
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Hovd
          - Asia/Krasnoyarsk
          - Asia/Tomsk
          - Asia/Chongqing
          - Asia/Irkutsk
          - Asia/Kuala_Lumpur
          - Australia/Perth
          - Asia/Taipei
          - Asia/Ulaanbaatar
          - Asia/Pyongyang
          - Australia/Eucla
          - Asia/Chita
          - Asia/Tokyo
          - Asia/Seoul
          - Asia/Yakutsk
          - Australia/Adelaide
          - Australia/Darwin
          - Australia/Brisbane
          - Australia/Canberra
          - Pacific/Guam
          - Australia/Hobart
          - Asia/Vladivostok
          - Australia/Lord_Howe
          - Pacific/Bougainville
          - Asia/Srednekolymsk
          - Asia/Magadan
          - Pacific/Norfolk
          - Asia/Sakhalin
          - Pacific/Guadalcanal
          - Asia/Anadyr
          - Pacific/Auckland
          - Pacific/Fiji
          - Pacific/Chatham
          - Pacific/Tongatapu
          - Pacific/Apia
          - Pacific/Kiritimati
          type: string
          readOnly: true
        plan_id:
          type: string
          nullable: true
          readOnly: true
        plan_status:
          type: string
          readOnly: true
        active:
          type: boolean
          readOnly: true
        mfa_enforced:
          type: boolean
        use_froala:
          type: boolean
          readOnly: true
        created_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - active
      - created_time
      - id
      - org_name
      - plan_id
      - plan_status
      - role
      - timezone
      - unique_key
      - use_froala
      description: ''
    YouSignDelivery:
      type: object
      description: ''
      properties:
        id:
          type: integer
          readOnly: true
        failure_email_recipients:
          type: string
          nullable: true
          maxLength: 255
        account:
          type: integer
        signers:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              first_name:
                type: string
                minLength: 2
              last_name:
                type: string
                minLength: 2
              email:
                type: string
                format: email
              phone_number:
                type: string
              locale:
                type: string
                minLength: 2
                enum:
                - en
                - fr
                - de
                - it
                - nl
                - es
                - pl
              success_url:
                type: string
                format: uri
              error_url:
                type: string
                format: uri
              signature_authentication_mode:
                type: string
                enum:
                - otp_email
                - otp_sms
                - no_otp
              signature_level:
                type: string
                enum:
                - electronic_signature
                - advanced_electronic_signature
                - electronic_signature_with_qualified_certificate
                - qualified_electronic_signature_mode_1
              order:
                type: number
            required:
            - first_name
            - last_name
            - email
            - locale
            - signature_level
            - signature_authentication_mode
        approvers:
          type: array
          items:
            type: object
            properties:
              locale:
                type: string
                minLength: 2
                enum:
                - en
                - fr
                - de
                - it
                - nl
                - es
                - pl
              first_name:
                type: string
                minLength: 2
              last_name:
                type: string
                minLength: 2
              email:
                type: string
                format: email
              phone_number:
                type: string
            required:
            - locale
            - first_name
            - last_name
            - email
          nullable: true
        followers:
          type: array
          items:
            type: object
            properties:
              locale:
                type: string
                minLength: 2
                enum:
                - en
                - fr
                - de
                - it
                - nl
                - es
                - pl
              email:
                type: string
                format: email
            required:
            - locale
            - email
          nullable: true
        reminder_settings:
          type: object
          properties:
            interval_in_days:
              type: number
              enum:
              - 1
              - 2
              - 7
              - 14
            max_occurrences:
              type: number
              minimum: 1
              maximum: 10
          required:
          - interval_in_days
          - max_occurrences
          nullable: true
        name:
          type: string
          maxLength: 255
        type:
          enum:
          - webhook
          - docu_sign
          - sign_now
          - zoho_crm
          - dropbox
          - google_drive
          - podio
          - one_drive
          - eversign
          - hellosign
          - aws_s3
          - signable
          - yousign
          - email
          - sftp
          type: string
        success_callback_url:
          type: string
          nullable: true
          maxLength: 255
        success_callback_payload:
          type: object
          additionalProperties: {}
          nullable: true
        success_callback_headers:
          type: object
          additionalProperties: {}
          nullable: true
        last_used_on:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          maxLength: 256
        email_custom_note:
          type: string
          nullable: true
        delivery_mode:
          enum:
          - email
          type: string
        ordered_signers:
          type: boolean
        timezone:
          type: string
          nullable: true
          maxLength: 100
        expiration_date:
          type: string
          format: date
          nullable: true
        custom_experience_id:
          type: string
          nullable: true
          maxLength: 256
        workspace_id:
          type: string
          nullable: true
          maxLength: 256
        audit_trail_locale:
          type: string
          nullable: true
          maxLength: 256
        enable_optional_signers:
          type: boolean
      required:
      - account
      - id
      - name
      - signers
      - title
  securitySchemes:
    OAuthAuthentication:
      type: http
      scheme: bearer
      description: OAuth2 Bearer Token Authentication
    SessionAuthentication:
      type: apiKey
      in: cookie
      name: sessionid
      description: browser based login takes care of this
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Basic"
externalDocs:
  description: Help docs on how to use API
  url: https://help.docupilot.app/developers/api-overview
